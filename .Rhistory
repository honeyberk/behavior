="Usage", main = "Average LogCheck Usage", names=c("0%", "20%", "40%", "60%", "80%"))
barplot(logcheck.usage$LogCheck.Usage, col="darkorange", ylab ="Frequency", xlab
="Usage", main = "Average LogCheck Usage", names=c("0%", "20%", "40%", "60%", "80%"))
hist(logcheck.usage$LogCheck.Usage, col="darkorange", ylab ="Frequency", xlab
="Usage", main = "Average LogCheck Usage", labels = c("0%", "20%", "40%", "60%", "80%"))
hist(logcheck.usage$LogCheck.Usage, col="darkorange", ylab ="Frequency", xlab
="Usage", main = "Average LogCheck Usage")
axis(labels = c("0%", "20%", "40%", "60%", "80%"))
hist(logcheck.usage$LogCheck.Usage, col="darkorange", ylab ="Frequency", xlab
="Usage", main = "Average LogCheck Usage")
axis(labels = c("0%", "20%", "40%", "60%", "80%"))
axis(1, labels = c("0%", "20%", "40%", "60%", "80%"))
hist(logcheck.usage$LogCheck.Usage, col="darkorange", ylab ="Frequency", xlab
="Usage", main = "Average LogCheck Usage")
axis(1, labels = c("0%", "20%", "40%", "60%", "80%"))
hist(logcheck.usage$LogCheck.Usage, col="darkorange", ylab ="Frequency", xlab
="Usage", main = "Average LogCheck Usage")
summary(logcheck.usage$LogCheck.Usage)
hist(logcheck.usage$LogCheck.Usage, col="darkorange", ylab ="Frequency", xlab
="Usage", main = "Average LogCheck Usage")
stem(logcheck.usage$LogCheck.Usage)
25/35
10/35
10/25
5/35
POST <- read.csv("REVISED_FINAL_POST_OM.csv",header = TRUE,sep = ",",stringsAsFactors = FALSE)
PRE <- read.csv("REVISED_FINAL_PRE_OM.csv",header = TRUE,sep = ",",stringsAsFactors = FALSE)
Post_proc <- lapply(POST, FUN = function(foo) car::recode(foo, "'Never' = 0 ; 'Annually' = 1 ; 'Seasonally' = 2 ; 'Monthly' = 3 ; 'Weekly' = 4 ; 'Daily' = 5 ; 'Not applicable' = NA ; 'Not Applicable' = NA ; 'No logging' = NA ; 'No understanding' = NA ; '' = NA ; 'Y' = T", as.numeric.result = T, as.factor.result = F))
Post_proc <- lapply(POST, FUN = function(foo) car::recode(foo, "'Never' = 0 ; 'Annually' = 1 ; 'Seasonally' = 2 ; 'Monthly' = 3 ; 'Weekly' = 4 ; 'Daily' = 5 ; 'Not applicable' = NA ; 'Not Applicable' = NA ; 'No logging' = NA ; 'No understanding' = NA ; '' = NA ; 'Y' = T", as.numeric.result = T, as.factor.result = F))
Post_proc <- data.frame(Post_proc)
IsExperimental = Post_proc[2:nrow(Post_proc),c(1,ncol(Post_proc))]
cutdown <- ncol(Post_proc)-3
Post_proc <- Post_proc[,1:cutdown]
best_prac <- as.vector(Post_proc[1,2:cutdown],mode='numeric')
best_prac <- as.vector(Post_proc[1,2:cutdown],mode='numeric')
best_prac = append(1, best_prac)
best_prac = append(1, best_prac)
Post_proc <- Post_proc[2:nrow(Post_proc), ]
Pre_proc <- lapply(PRE, FUN = function(foo) car::recode(foo, "'Never' = 0 ; 'never' = 0 ; 'Annually' = 1 ; 'Seasonally' = 2 ; 'Monthly' = 3 ; 'Weekly' = 4 ; 'Daily' = 5 ; 'Not applicable' = NA ; 'Not Applicable' = NA ; 'Multiple answer' = NA ; 'Mulitple answer' = NA ; 'As needed' = NA ; 'No logging' = NA ; 'No understanding' = NA ; 'NR' = NA ; '' = NA", as.numeric.result = T, as.factor.result = F))
cutdown <- ncol(Pre_proc)-2
Pre_proc <- Pre_proc[2:nrow(Pre_proc),1:cutdown]
Post_proc2 <- subset(Post_proc, BPL.BLD.ID %in% Pre_proc$BPL.BLD.ID)
IsExperimental = Post_proc[2:nrow(Post_proc),c(1,ncol(Post_proc))]
cutdown <- ncol(Post_proc)-3
Post_proc <- Post_proc[,1:cutdown]
best_prac <- as.vector(Post_proc[1,2:cutdown],mode='numeric')
best_prac = append(1, best_prac)
Post_proc <- Post_proc[2:nrow(Post_proc), ]
Pre_proc <- lapply(PRE, FUN = function(foo) car::recode(foo, "'Never' = 0 ; 'never' = 0 ; 'Annually' = 1 ; 'Seasonally' = 2 ; 'Monthly' = 3 ; 'Weekly' = 4 ; 'Daily' = 5 ; 'Not applicable' = NA ; 'Not Applicable' = NA ; 'Multiple answer' = NA ; 'Mulitple answer' = NA ; 'As needed' = NA ; 'No logging' = NA ; 'No understanding' = NA ; 'NR' = NA ; '' = NA", as.numeric.result = T, as.factor.result = F))
Pre_proc <- data.frame(Pre_proc)
cutdown <- ncol(Pre_proc)-2
Pre_proc <- Pre_proc[2:nrow(Pre_proc),1:cutdown]
Post_proc2 <- subset(Post_proc, BPL.BLD.ID %in% Pre_proc$BPL.BLD.ID)
Pre_proc2 <- subset(Pre_proc, BPL.BLD.ID %in% Post_proc$BPL.BLD.ID)
Post_score <- data.frame(mapply(`/`,Post_proc2,best_prac))
Pre_score <- data.frame(mapply(`/`,Pre_proc2,best_prac))
Post_score <- Post_score[with(Post_score, order(BPL.BLD.ID)), ]
Pre_score[1000 > Pre_score & Pre_score > 1] <- 1
Post_score[1000 > Post_score & Post_score > 1] <- 1
Pre_post = Post_score - Pre_score
Pre_post[,1] = Pre_score[,1]
IsExperimental <- data.frame(IsExperimental)
IsExperimental <- subset(IsExperimental, BPL.BLD.ID %in% Pre_score$BPL.BLD.ID)
Post_score <- Post_score[with(Post_score, order(BPL.BLD.ID)), ]
Pre_score[1000 > Pre_score & Pre_score > 1] <- 1
Post_score[1000 > Post_score & Post_score > 1] <- 1
Pre_post = Post_score - Pre_score
Pre_post[,1] = Pre_score[,1]
IsExperimental <- lapply(POST[2:nrow(POST),c(1,ncol(POST))], FUN = function(foo) car::recode(foo, "'' = F ; 'Y' = T", as.numeric.result = T, as.factor.result = F))
IsExperimental <- data.frame(IsExperimental)
IsExperimental <- subset(IsExperimental, BPL.BLD.ID %in% Pre_score$BPL.BLD.ID)
IsExperimental <- IsExperimental[with(IsExperimental, order(BPL.BLD.ID)), ]
POST <- read.csv("REVISED_FINAL_POST_OM.csv",header = TRUE,sep = ",",stringsAsFactors = FALSE)
PRE <- read.csv("REVISED_FINAL_PRE_OM.csv",header = TRUE,sep = ",",stringsAsFactors = FALSE)
Post_proc <- lapply(POST, FUN = function(foo) car::recode(foo, "'Never' = 0 ; 'Annually' = 1 ; 'Seasonally' = 2 ; 'Monthly' = 3 ; 'Weekly' = 4 ; 'Daily' = 5 ; 'Not applicable' = NA ; 'Not Applicable' = NA ; 'No logging' = NA ; 'No understanding' = NA ; '' = NA ; 'Y' = T", as.numeric.result = T, as.factor.result = F))
Post_proc <- data.frame(Post_proc)
IsExperimental = Post_proc[2:nrow(Post_proc),c(1,ncol(Post_proc))]
cutdown <- ncol(Post_proc)-3
Post_proc <- Post_proc[,1:cutdown]
best_prac <- as.vector(Post_proc[1,2:cutdown],mode='numeric')
best_prac = append(1, best_prac)
Post_proc <- Post_proc[2:nrow(Post_proc), ]
Pre_proc <- lapply(PRE, FUN = function(foo) car::recode(foo, "'Never' = 0 ; 'never' = 0 ; 'Annually' = 1 ; 'Seasonally' = 2 ; 'Monthly' = 3 ; 'Weekly' = 4 ; 'Daily' = 5 ; 'Not applicable' = NA ; 'Not Applicable' = NA ; 'Multiple answer' = NA ; 'Mulitple answer' = NA ; 'As needed' = NA ; 'No logging' = NA ; 'No understanding' = NA ; 'NR' = NA ; '' = NA", as.numeric.result = T, as.factor.result = F))
Pre_proc <- data.frame(Pre_proc)
cutdown <- ncol(Pre_proc)-2
Pre_proc <- Pre_proc[2:nrow(Pre_proc),1:cutdown]
Post_proc2 <- subset(Post_proc, BPL.BLD.ID %in% Pre_proc$BPL.BLD.ID)
Pre_proc2 <- subset(Pre_proc, BPL.BLD.ID %in% Post_proc$BPL.BLD.ID)
Post_score <- data.frame(mapply(`/`,Post_proc2,best_prac))
Pre_score <- data.frame(mapply(`/`,Pre_proc2,best_prac))
Pre_score <- Pre_score[with(Pre_score, order(BPL.BLD.ID)), ]
Post_score <- Post_score[with(Post_score, order(BPL.BLD.ID)), ]
Pre_score[1000 > Pre_score & Pre_score > 1] <- 1
Post_score[1000 > Post_score & Post_score > 1] <- 1
Pre_post = Post_score - Pre_score
Pre_post[,1] = Pre_score[,1]
IsExperimental <- lapply(POST[2:nrow(POST),c(1,ncol(POST))], FUN = function(foo) car::recode(foo, "'' = F ; 'Y' = T", as.numeric.result = T, as.factor.result = F))
IsExperimental <- data.frame(IsExperimental)
IsExperimental <- subset(IsExperimental, BPL.BLD.ID %in% Pre_score$BPL.BLD.ID)
IsExperimental <- IsExperimental[with(IsExperimental, order(BPL.BLD.ID)), ]
pre_post.usage <- merge(Pre_post,logcheck.usage,by='BPL.BLD.ID',all.x = TRUE)
intersect(Pre_post$BPL.BLD.ID,logcheck.usage$BPL.BLD.ID)
pre_post.usage.isexp <- merge(pre_post.usage,IsExperimental,by='BPL.BLD.ID', all.x = TRUE)
summary(pre_post.usage.isexp$LogCheck)
print pre_post.usage.isexp
print (pre_post.usage.isexp)
p1195 <- pre_post.usage.isexp[pre_post.usage.isexp$BPL.BLD.ID == 1195]
print(pre_post.usage.isexp$BPL.BLD.ID)
print(pre_post.usage.isexp$BPL.BLD.ID["1195"])
write.csv(pre_post.usage.isexp, "test.csv")
library(data.table)
library(dplyr)
library(ggplot2)
post.attitude <- fread(input = "./REVISED_FINAL_POST_ATTITUDE_rename.csv",
header = TRUE, stringsAsFactors = TRUE)
Pre_post <- fread(input = "./Pre_post.csv",
header = TRUE, stringsAsFactors = TRUE)
pre_post.attitude <- merge(Pre_post,post.attitude,by='BPL.BLD.ID', all.x = TRUE)
pre_post.attitude_E <- pre_post.attitude %>%
filter(LogCheck == "Y")
library(broom)
install.packages("broom")
library(broom)
all_pvals <- data.frame(varname=as.character(), col=as.character(), coefest=as.numeric(), p_val=as.numeric())
overall_stats <- data.frame(col=as.character(), MultR2=as.numeric(), AdjR2=as.numeric(), p_val=as.numeric())
for (col in names(pre_post.attitude_E)[grep("X", names(pre_post.attitude_E))]) {
# cat(col, ":\n")
lmodel <- lm(paste(col, "~ A0.3 + A0.4 + A0.56 + A0.57 + A0.58 + A0.59 + Age + Experience + A0.68 + A0.69"), data = pre_post.attitude_E)
smy <- summary(lmodel)
all_pvals <- rbind(all_pvals, data.frame(varname = names(smy$coefficients[,4]), col = col, coefest = smy$coefficients[,1], p_val = smy$coefficients[,4]))
overall_stats <- rbind(overall_stats, data.frame(col = col,  MultR2 = glance(lmodel)$r.squared, AdjR2 = glance(lmodel)$adj.r.squared, p_val = glance(lmodel)$p.value))
}
overall_stats$q_val <- p.adjust(overall_stats$p_val, method = "BH")
overall_stats
all_pvals$adjusted <- p.adjust(all_pvals$p_val, method = "BH")
signif_coefficients <- subset(all_pvals, p_val < 0.05)
signif_coefficients
lm(pre_post.attitude_E)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
hist(logcheck.usage$LogCheck.Usage, ylab ="Frequency", xlab
="Usage", main = "Average LogCheck Usage")
logcheck.usage <- fread(input = "./LOGCHECK USERS WITH POST.csv",
header = TRUE)
setwd("C:/Users/Honey/Dropbox (CUNY BPL)/BPL/Projects/Behavior (NYSERDA 2631)/HONEY/BEHAVIOR/Post-RIA Review")
library(data.table)
logcheck.usage <- fread(input = "./LOGCHECK USERS WITH POST.csv",
header = TRUE)
hist(logcheck.usage$LogCheck.Usage, ylab ="Frequency", xlab
="Usage", main = "Average LogCheck Usage")
install.packages("gplots")
setwd("C:/Users/Honey/Dropbox (CUNY BPL)/BPL/Projects/Behavior (NYSERDA 2631)/HONEY/BEHAVIOR/behavior")
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
library(car)
library(car)
POST <- read.csv("REVISED_FINAL_POST_OM - PRE-QREMOVAL.csv",header = TRUE,sep = ",",stringsAsFactors = FALSE)
Post_proc <- lapply(POST, FUN = function(foo) car::recode(foo, "'Never' = 0 ; 'Annually' = 1 ; 'Seasonally' = 2 ; 'Monthly' = 3 ; 'Weekly' = 4 ; 'Daily' = 5 ; 'Not applicable' = NA ; 'Not Applicable' = NA ; 'No logging' = NA ; 'No understanding' = NA ; '' = NA ; 'Y' = T", as.numeric.result = T, as.factor.result = F))
IsExperimental = Post_proc[2:nrow(Post_proc),c(1,ncol(Post_proc))]
cutdown <- ncol(Post_proc)-3
best_prac <- as.vector(Post_proc[1,2:cutdown],mode='numeric')
best_prac = append(1, best_prac)
Post_proc <- Post_proc[2:nrow(Post_proc), ]
library(car)
POST <- read.csv("REVISED_FINAL_POST_OM - PRE-QREMOVAL.csv",header = TRUE,sep = ",",stringsAsFactors = FALSE)
PRE <- read.csv("REVISED_FINAL_PRE_OM - PRE-QREMOVAL.csv",header = TRUE,sep = ",",stringsAsFactors = FALSE)
Post_proc <- lapply(POST, FUN = function(foo) car::recode(foo, "'Never' = 0 ; 'Annually' = 1 ; 'Seasonally' = 2 ; 'Monthly' = 3 ; 'Weekly' = 4 ; 'Daily' = 5 ; 'Not applicable' = NA ; 'Not Applicable' = NA ; 'No logging' = NA ; 'No understanding' = NA ; '' = NA ; 'Y' = T", as.numeric.result = T, as.factor.result = F))
Post_proc <- data.frame(Post_proc)
IsExperimental = Post_proc[2:nrow(Post_proc),c(1,ncol(Post_proc))]
cutdown <- ncol(Post_proc)-3
Post_proc <- Post_proc[,1:cutdown]
best_prac <- as.vector(Post_proc[1,2:cutdown],mode='numeric')
best_prac = append(1, best_prac)
Post_proc <- Post_proc[2:nrow(Post_proc), ]
Pre_proc <- lapply(PRE, FUN = function(foo) car::recode(foo, "'Never' = 0 ; 'never' = 0 ; 'Annually' = 1 ; 'Seasonally' = 2 ; 'Monthly' = 3 ; 'Weekly' = 4 ; 'Daily' = 5 ; 'Not applicable' = NA ; 'Not Applicable' = NA ; 'Multiple answer' = NA ; 'Mulitple answer' = NA ; 'As needed' = NA ; 'No logging' = NA ; 'No understanding' = NA ; 'NR' = NA ; '' = NA", as.numeric.result = T, as.factor.result = F))
Pre_proc <- data.frame(Pre_proc)
cutdown <- ncol(Pre_proc)-2
Pre_proc <- Pre_proc[2:nrow(Pre_proc),1:cutdown]
Post_proc2 <- subset(Post_proc, BPL.BLD.ID %in% Pre_proc$BPL.BLD.ID)
Pre_proc2 <- subset(Pre_proc, BPL.BLD.ID %in% Post_proc$BPL.BLD.ID)
Post_score <- data.frame(mapply(`/`,Post_proc2,best_prac))
Pre_score <- data.frame(mapply(`/`,Pre_proc2,best_prac))
Pre_score <- Pre_score[with(Pre_score, order(BPL.BLD.ID)), ]
Post_score <- Post_score[with(Post_score, order(BPL.BLD.ID)), ]
Pre_score[1000 > Pre_score & Pre_score > 1] <- 1
Post_score[1000 > Post_score & Post_score > 1] <- 1
Pre_post = Post_score - Pre_score
Pre_post[,1] = Pre_score[,1]
IsExperimental <- lapply(POST[2:nrow(POST),c(1,ncol(POST))], FUN = function(foo) car::recode(foo, "'' = F ; 'Y' = T", as.numeric.result = T, as.factor.result = F))
IsExperimental <- data.frame(IsExperimental)
IsExperimental <- subset(IsExperimental, BPL.BLD.ID %in% Pre_score$BPL.BLD.ID)
IsExperimental <- IsExperimental[with(IsExperimental, order(BPL.BLD.ID)), ]
pre_post.isexp <- merge(Pre_post,IsExperimental,by='BPL.BLD.ID', all.x = TRUE)
summary(pre_post.isexp$LogCheck)
deleted_behaviors <- c()
Pre_score.filtered <- Pre_score
for(i in colnames(Pre_score[,2:ncol(Pre_score)])){
isone <- na.omit(Pre_score[[i]]) == 1
a <- ftable(isone)
if (a[2]/sum(a) > 0.75 | all(isone)){
deleted_behaviors <- c(deleted_behaviors,i)
pre_post.isexp[, i] <- NULL
Pre_score.filtered[, i] <- NULL}}
deleted_behaviors
prehist <- vector(mode="list", length=5)
names(prehist) <- c("histogram", "maxfreq", "ndigits", "multiplier", "rounded")
par(mfrow=c(1,2))
prehist$histogram <- hist(unlist(Pre_score[,2:ncol(Pre_score)]), plot=FALSE)
prehist$maxfreq <- max(prehist$histogram$counts)
prehist$ndigits <- nchar(as.character(prehist$maxfreq))
prehist$multiplier <- 10^(prehist$ndigits-2)
prehist$rounded <- ceiling(prehist$maxfreq/prehist$multiplier)*prehist$multiplier
plot(prehist$histogram, main="(A) Scores Before Filtering", xlab="Behavior Compliance Score",ylim = c(0, prehist$rounded))
prehist2 <- hist(unlist(Pre_score.filtered[,2:ncol(Pre_score.filtered)]), main="(B) Scores After Filtering", xlab="Behavior Compliance Score", ylim = c(0, prehist$rounded))
```{r}
pre_post.all <- pre_post.isexp %>%
mutate(X2 = rowMeans(select(pre_post.isexp, starts_with("X2")), na.rm = TRUE),
X3 = rowMeans(select(pre_post.isexp, starts_with("X3")), na.rm = TRUE),
X4 = rowMeans(select(pre_post.isexp, starts_with("X4")), na.rm = TRUE),
X5 = rowMeans(select(pre_post.isexp, starts_with("X5")), na.rm = TRUE),
X6 = rowMeans(select(pre_post.isexp, starts_with("X6")), na.rm = TRUE),
X7 = rowMeans(select(pre_post.isexp, starts_with("X7")), na.rm = TRUE),
X8 = rowMeans(select(pre_post.isexp, starts_with("X8")), na.rm = TRUE),
Xall = rowMeans(select(pre_post.isexp, starts_with("X")), na.rm = TRUE))
pre_post.all <- pre_post.isexp %>%
mutate(X2 = rowMeans(select(pre_post.isexp, starts_with("X2")), na.rm = TRUE),
X3 = rowMeans(select(pre_post.isexp, starts_with("X3")), na.rm = TRUE),
X4 = rowMeans(select(pre_post.isexp, starts_with("X4")), na.rm = TRUE),
X5 = rowMeans(select(pre_post.isexp, starts_with("X5")), na.rm = TRUE),
X6 = rowMeans(select(pre_post.isexp, starts_with("X6")), na.rm = TRUE),
X7 = rowMeans(select(pre_post.isexp, starts_with("X7")), na.rm = TRUE),
X8 = rowMeans(select(pre_post.isexp, starts_with("X8")), na.rm = TRUE),
Xall = rowMeans(select(pre_post.isexp, starts_with("X")), na.rm = TRUE))
pre_post.all <- pre_post.isexp %>%
mutate(X2 = rowMeans(select(pre_post.isexp, starts_with("X2")), na.rm = TRUE),
X3 = rowMeans(select(pre_post.isexp, starts_with("X3")), na.rm = TRUE),
X4 = rowMeans(select(pre_post.isexp, starts_with("X4")), na.rm = TRUE),
X5 = rowMeans(select(pre_post.isexp, starts_with("X5")), na.rm = TRUE),
X6 = rowMeans(select(pre_post.isexp, starts_with("X6")), na.rm = TRUE),
X7 = rowMeans(select(pre_post.isexp, starts_with("X7")), na.rm = TRUE),
X8 = rowMeans(select(pre_post.isexp, starts_with("X8")), na.rm = TRUE),
Xall = rowMeans(select(pre_post.isexp, starts_with("X")), na.rm = TRUE))
library(data.table)
library(dplyr)
library(ggplot2)
logcheck.usage <- fread(input = "./LOGCHECK USERS WITH POST.csv",
header = TRUE)
hist(logcheck.usage$LogCheck.Usage, ylab ="Frequency", xlab
="Usage", main = "Average LogCheck Usage")
stem(logcheck.usage$LogCheck.Usage)
pre_post.all <- pre_post.isexp %>%
mutate(X2 = rowMeans(select(pre_post.isexp, starts_with("X2")), na.rm = TRUE),
X3 = rowMeans(select(pre_post.isexp, starts_with("X3")), na.rm = TRUE),
X4 = rowMeans(select(pre_post.isexp, starts_with("X4")), na.rm = TRUE),
X5 = rowMeans(select(pre_post.isexp, starts_with("X5")), na.rm = TRUE),
X6 = rowMeans(select(pre_post.isexp, starts_with("X6")), na.rm = TRUE),
X7 = rowMeans(select(pre_post.isexp, starts_with("X7")), na.rm = TRUE),
X8 = rowMeans(select(pre_post.isexp, starts_with("X8")), na.rm = TRUE),
Xall = rowMeans(select(pre_post.isexp, starts_with("X")), na.rm = TRUE))
ttest <- function(coln,group){
col_C <- coln[group == 'FALSE']
col_E <- coln[group == 'TRUE']
t.test(col_E,col_C,alternative = 'greater')$p.value
}
ttest.p <- sapply(pre_post.all %>% select(-BPL.BLD.ID, -LogCheck),
function(x) ttest(x, pre_post.isexp$LogCheck))
hist(ttest.p,width=5)
signif_p <- Filter(function(x) x < .05, ttest.p)
signif_p
wmwtest <- function(coln, group) {
col_C <- coln[group == 'FALSE']
col_E <- coln[group == 'TRUE']
wilcox.test(col_E, col_C, alternative = 'greater')$p.value
}
wmw.p <- sapply(pre_post.all %>% select(-BPL.BLD.ID, -LogCheck),
wmwtest, group=pre_post.all$LogCheck)
ggplot(data.frame(name = names(wmw.p), p_val = wmw.p),aes(p_val))+
geom_histogram()+
theme_bw()+
ggtitle("Histogram of Wilcoxon-Mann-Whitney test p value")
wmw.q <- p.adjust(wmw.p, method = "BH")
ttest.q <- p.adjust(ttest.p, method = "BH")
library(fdrtool)
wmw.q2 <- fdrtool(wmw.p[complete.cases(wmw.p)], statistic = "pvalue")
ttest.q2 <- fdrtool(ttest.p[complete.cases(ttest.p)], statistic = "pvalue")
pvals <- merge(data.frame(name = names(ttest.p), tp_val = ttest.p, tq_val = ttest.q, tfdr2 = ttest.q),data.frame(name = names(wmw.p), wp_val = wmw.p, wq_val = wmw.q, wfdr2 = wmw.q),by='name', all.x = TRUE)
pvals.sorted <- pvals[with(pvals, order(tp_val, wp_val)), ]
pvals.sorted[pvals.sorted$tp_val <= 0.1,]
a <- pvals[pvals$tp_val <= 0.05,c(1,2,3,5,6)]
a[,2:5] <- round(a[,2:5],digits=4)
a <- t(a)
library(tibble)
library(dplyr)
sem <- function(x, ...) {
sd(x, ...)/sqrt(length(na.omit(x)))
}
pre_post.stat <- pre_post.all %>%
group_by(LogCheck) %>%
summarise_at(vars(matches("X")), funs(mean, sd, sem), na.rm = TRUE) %>%
mutate(logc = ifelse(LogCheck == TRUE, "LogCheck", "Control")) %>%
column_to_rownames(var="logc") %>%
select(-LogCheck)
library(data.table)
library(tidyr)
pre_post.stat.rshaped <- as.data.frame(t(pre_post.stat)) %>%
rownames_to_column("Behavior")  %>%
separate(col = Behavior, into = c("Behavior", "measure"), sep = "_") %>%
setDT() %>%
dcast(Behavior ~ measure, value.var = c("LogCheck", "Control")) %>%
mutate(mean_diff = LogCheck_mean - Control_mean)
pre_post.stat.rshaped #Show all means, SDs, SEMs, mean differences in Exp and Ctl group
orderedbehaviors <- pre_post.stat.rshaped[with(pre_post.stat.rshaped, order(-mean_diff)), c(1,8)]
library(ggplot2)
pre_post.stat.mean <- pre_post.stat.rshaped %>%
select(Behavior, LogCheck_mean, Control_mean, LogCheck_sem, Control_sem) %>%
gather(LogCheck_mean, Control_mean, key = "group", value = "mean") %>%
mutate(sem = ifelse(group == "LogCheck_mean", LogCheck_sem, Control_sem),
group = sub("([A-Z][a-z]+)_.+", "\\1", group)) %>%
select(-LogCheck_sem, -Control_sem) %>%
merge(data.frame(Behavior = names(ttest.p), p_val = ttest.p),by='Behavior', all.x = TRUE) %>%
mutate(sig_level = ifelse(p_val > .1, "", ifelse(p_val > .05, "*", "**")))
foruse <- pre_post.all %>%
mutate(Group = ifelse(LogCheck == TRUE, "LogCheck", "Control")) %>%
subset(select = -LogCheck)
plotframe <- data.frame(BPL.BLD.ID=integer(),
Improvement=double(),
Behavior=character(),
Group=character(),
stringsAsFactors=FALSE)
for (behavior in orderedbehaviors$Behavior){
newdf <- filter_(foruse,paste(behavior," > -10"))
newdf <- newdf[,c("BPL.BLD.ID", behavior, "Group")]
names(newdf)[names(newdf)==behavior] <- "Improvement"
newdf$Behavior <- behavior
plotframe <- rbind(plotframe, newdf)}
lvl <- orderedbehaviors$Behavior
lvl <- lvl[length(lvl):1]
plotframe$Behavior <- factor(plotframe$Behavior, levels=lvl)
library(beanplot)
library(grid)
library(gplots)
plot1 <- pre_post.stat.mean.ordered %>%
ggplot(aes(x = Behavior, y = mean, fill = group)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values=col2hex(c("purple","orange"))) +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), position = position_dodge(0.9)) +
geom_text(aes(label=sig_level), position = position_dodge(0.9)) +
theme_bw()+coord_flip()+theme(legend.position="bottom",axis.title.x=element_blank(),
axis.title.y=element_blank())
lvl <- orderedbehaviors$Behavior
lvl <- lvl[length(lvl):1]
pre_post.stat.mean.ordered <- pre_post.stat.mean
pre_post.stat.mean.ordered <- within(pre_post.stat.mean.ordered, Behavior <- factor(Behavior, levels=lvl))
pre_post.stat.mean %>%
filter(grepl("^X\\d$", Behavior)) %>%
ggplot(aes(x = Behavior, y = mean, fill = group)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values=col2hex(c("purple","orange"))) +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem),
position = position_dodge(0.9),
width =.5) +
geom_text(aes(label=sig_level),position = position_dodge(0.9))+
theme_bw()+theme(legend.position="bottom") +
ylab("Mean Improvement")+
ggtitle("(B) Improvement on Aggregate Behaviors")
pre_post.stat.mean %>%
filter(Behavior %in% as.character(pvals[pvals$tp_val < 0.05, ]$name)) %>%
ggplot(aes(x = Behavior, y = mean, fill = group)) +
scale_fill_manual(values=col2hex(c("purple","orange"))) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem),
position = position_dodge(0.9),
width = .5) +
theme_bw()+theme(legend.position="bottom")+
ylab("Mean Improvement")+
ggtitle("Behaviors with Significant (p < 0.05) Improvement")
pre_post.stat.mean %>%
filter(grepl("^Xall$", Behavior)) %>%
ggplot(aes(x = Behavior, y = mean, fill = group)) +
scale_fill_manual(values=col2hex(c("purple","orange"))) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem),
position = position_dodge(0.9),
width = .5) +
theme_bw()+#theme(legend.position="bottom")+
ylab("Mean Improvement")+
ggtitle("(A) Overall Improvement on Tracked Behaviors")
View(pre_post.all)
View(Pre_post)
describe(pre_post.all)
library(psych)
describe(pre_post.all)
pre_post.sumstats <- describe(pre_post.all)
write.csv(pre_post.sumstats, "pre_post.sumstats.csv")
pre_post.sumstats <- describe(pre_post.all)
describe(pre_post.all)
View(Pre_post)
pre_post.sumstats <- describe(pre_post)
pre_post.sumstats <- describe(Pre_post)
write.csv(pre_post.sumstats, "pre_post.sumstats.csv")
pre_post.sumstats <- describe(Pre_post)
write.csv(pre_post.sumstats, "pre_post.sumstats.csv")
summary(Pre_post)
str(Pre_post)
97/137
mean(c(71, 83, 92, 97, 91))
86.8/137
summary(Pre_score)
summary(Post_score)
library(car)
library(car)
POST <- read.csv("REVISED_FINAL_POST_OM - PRE-QREMOVAL.csv",header = TRUE,sep = ",",stringsAsFactors = FALSE)
Post_proc <- lapply(POST, FUN = function(foo) car::recode(foo, "'Never' = 0 ; 'Annually' = 1 ; 'Seasonally' = 2 ; 'Monthly' = 3 ; 'Weekly' = 4 ; 'Daily' = 5 ; 'Not applicable' = NA ; 'Not Applicable' = NA ; 'No logging' = NA ; 'No understanding' = NA ; '' = NA ; 'Y' = T", as.numeric.result = T, as.factor.result = F))
Post_proc <- data.frame(Post_proc)
IsExperimental = Post_proc[2:nrow(Post_proc),c(1,ncol(Post_proc))]
cutdown <- ncol(Post_proc)-3
Post_proc <- Post_proc[,1:cutdown]
best_prac <- as.vector(Post_proc[1,2:cutdown],mode='numeric')
best_prac = append(1, best_prac)
Post_proc <- Post_proc[2:nrow(Post_proc), ]
Pre_proc <- lapply(PRE, FUN = function(foo) car::recode(foo, "'Never' = 0 ; 'never' = 0 ; 'Annually' = 1 ; 'Seasonally' = 2 ; 'Monthly' = 3 ; 'Weekly' = 4 ; 'Daily' = 5 ; 'Not applicable' = NA ; 'Not Applicable' = NA ; 'Multiple answer' = NA ; 'Mulitple answer' = NA ; 'As needed' = NA ; 'No logging' = NA ; 'No understanding' = NA ; 'NR' = NA ; '' = NA", as.numeric.result = T, as.factor.result = F))
Pre_proc <- data.frame(Pre_proc)
cutdown <- ncol(Pre_proc)-2
Pre_proc <- Pre_proc[2:nrow(Pre_proc),1:cutdown]
Post_proc2 <- subset(Post_proc, BPL.BLD.ID %in% Pre_proc$BPL.BLD.ID)
Pre_proc2 <- subset(Pre_proc, BPL.BLD.ID %in% Post_proc$BPL.BLD.ID)
Post_score <- data.frame(mapply(`/`,Post_proc2,best_prac))
Pre_score <- data.frame(mapply(`/`,Pre_proc2,best_prac))
Pre_score <- Pre_score[with(Pre_score, order(BPL.BLD.ID)), ]
Post_score <- Post_score[with(Post_score, order(BPL.BLD.ID)), ]
Pre_score[1000 > Pre_score & Pre_score > 1] <- 1
Post_score[1000 > Post_score & Post_score > 1] <- 1
Pre_post = Post_score - Pre_score
Pre_post[,1] = Pre_score[,1]
IsExperimental <- lapply(POST[2:nrow(POST),c(1,ncol(POST))], FUN = function(foo) car::recode(foo, "'' = F ; 'Y' = T", as.numeric.result = T, as.factor.result = F))
IsExperimental <- data.frame(IsExperimental)
IsExperimental <- subset(IsExperimental, BPL.BLD.ID %in% Pre_score$BPL.BLD.ID)
IsExperimental <- IsExperimental[with(IsExperimental, order(BPL.BLD.ID)), ]
View(Pre_post)
write.csv(Pre_post, "PRE_POST_FOR_ATTITUDES.csv")
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
library(car)
POST <- read.csv("REVISED_FINAL_POST_OM - PRE-QREMOVAL.csv",header = TRUE,sep = ",",stringsAsFactors = FALSE)
PRE <- read.csv("REVISED_FINAL_PRE_OM - PRE-QREMOVAL.csv",header = TRUE,sep = ",",stringsAsFactors = FALSE)
Post_proc <- lapply(POST, FUN = function(foo) car::recode(foo, "'Never' = 0 ; 'Annually' = 1 ; 'Seasonally' = 2 ; 'Monthly' = 3 ; 'Weekly' = 4 ; 'Daily' = 5 ; 'Not applicable' = NA ; 'Not Applicable' = NA ; 'No logging' = NA ; 'No understanding' = NA ; '' = NA ; 'Y' = T", as.numeric.result = T, as.factor.result = F))
IsExperimental = Post_proc[2:nrow(Post_proc),c(1,ncol(Post_proc))]
cutdown <- ncol(Post_proc)-3
Post_proc <- lapply(POST, FUN = function(foo) car::recode(foo, "'Never' = 0 ; 'Annually' = 1 ; 'Seasonally' = 2 ; 'Monthly' = 3 ; 'Weekly' = 4 ; 'Daily' = 5 ; 'Not applicable' = NA ; 'Not Applicable' = NA ; 'No logging' = NA ; 'No understanding' = NA ; '' = NA ; 'Y' = T", as.numeric.result = T, as.factor.result = F))
Post_proc <- data.frame(Post_proc)
IsExperimental = Post_proc[2:nrow(Post_proc),c(1,ncol(Post_proc))]
cutdown <- ncol(Post_proc)-3
Post_proc <- Post_proc[,1:cutdown]
best_prac <- as.vector(Post_proc[1,2:cutdown],mode='numeric')
best_prac = append(1, best_prac)
Post_proc <- Post_proc[2:nrow(Post_proc), ]
Pre_proc <- lapply(PRE, FUN = function(foo) car::recode(foo, "'Never' = 0 ; 'never' = 0 ; 'Annually' = 1 ; 'Seasonally' = 2 ; 'Monthly' = 3 ; 'Weekly' = 4 ; 'Daily' = 5 ; 'Not applicable' = NA ; 'Not Applicable' = NA ; 'Multiple answer' = NA ; 'Mulitple answer' = NA ; 'As needed' = NA ; 'No logging' = NA ; 'No understanding' = NA ; 'NR' = NA ; '' = NA", as.numeric.result = T, as.factor.result = F))
Pre_proc <- data.frame(Pre_proc)
cutdown <- ncol(Pre_proc)-2
Pre_proc <- Pre_proc[2:nrow(Pre_proc),1:cutdown]
Post_proc2 <- subset(Post_proc, BPL.BLD.ID %in% Pre_proc$BPL.BLD.ID)
Pre_proc2 <- subset(Pre_proc, BPL.BLD.ID %in% Post_proc$BPL.BLD.ID)
Post_score <- data.frame(mapply(`/`,Post_proc2,best_prac))
Pre_score <- data.frame(mapply(`/`,Pre_proc2,best_prac))
Pre_score <- Pre_score[with(Pre_score, order(BPL.BLD.ID)), ]
Post_score <- Post_score[with(Post_score, order(BPL.BLD.ID)), ]
Pre_score[1000 > Pre_score & Pre_score > 1] <- 1
Post_score[1000 > Post_score & Post_score > 1] <- 1
Pre_post = Post_score - Pre_score
Pre_post[,1] = Pre_score[,1]
IsExperimental <- lapply(POST[2:nrow(POST),c(1,ncol(POST))], FUN = function(foo) car::recode(foo, "'' = F ; 'Y' = T", as.numeric.result = T, as.factor.result = F))
IsExperimental <- data.frame(IsExperimental)
IsExperimental <- subset(IsExperimental, BPL.BLD.ID %in% Pre_score$BPL.BLD.ID)
IsExperimental <- IsExperimental[with(IsExperimental, order(BPL.BLD.ID)), ]
write.csv(Pre_post, "PRE_POST_FOR_ATTITUDES.csv")
write.csv(Pre_post, "PRE_POST_FOR_ATTITUDES.csv")
library(data.table)
library(dplyr)
library(ggplot2)
post.attitude <- fread(input = "./ATTITUDES_Q_POST.csv",
header = TRUE, stringsAsFactors = TRUE)
Pre_post <- fread(input = "./ATTITUDES_PRE_POST_QREM.csv",
header = TRUE, stringsAsFactors = TRUE)
pre_post.attitude <- merge(Pre_post,post.attitude,by='BPL.BLD.ID', all.x = TRUE)
pre_post.attitude_E <- pre_post.attitude %>%
filter(LogCheck == "Y")
library(broom)
all_pvals <- data.frame(varname=as.character(), col=as.character(), coefest=as.numeric(), p_val=as.numeric())
overall_stats <- data.frame(col=as.character(), MultR2=as.numeric(), AdjR2=as.numeric(), p_val=as.numeric())
for (col in names(pre_post.attitude_E)[grep("X", names(pre_post.attitude_E))]) {
# cat(col, ":\n")
lmodel <- lm(paste(col, "~ A0.3 + A0.4 + A0.56 + A0.57 + A0.58 + A0.59 + Age + Experience + A0.68 + A0.69"), data = pre_post.attitude_E)
smy <- summary(lmodel)
all_pvals <- rbind(all_pvals, data.frame(varname = names(smy$coefficients[,4]), col = col, coefest = smy$coefficients[,1], p_val = smy$coefficients[,4]))
overall_stats <- rbind(overall_stats, data.frame(col = col,  MultR2 = glance(lmodel)$r.squared, AdjR2 = glance(lmodel)$adj.r.squared, p_val = glance(lmodel)$p.value))
}
overall_stats$q_val <- p.adjust(overall_stats$p_val, method = "BH")
overall_stats
lmodel <- lm(paste(col, "~ Age + Experience"), data = pre_post.attitude_E)
smy <- summary(lmodel)
smy
lmodel <- lm(paste(col, "~ Experience"), data = pre_post.attitude_E)
summary(lmodel)
lmodel <- lm(paste(col, "~ Age"), data = pre_post.attitude_E)
summary(lmodel)
lmodel <- lm(paste(col, "~ A0.3 + A0.4 + A0.5"), data = pre_post.attitude_E)
lmodel <- lm(paste(col, "~ A0.3 + A0.4"), data = pre_post.attitude_E)
summary(lmodel)
lmodel <- lm(paste(col, "~ A0.56 + A0.57 + A0.58 + A0.59"), data = pre_post.attitude_E)
summary(lmodel)
lmodel <- lm(paste(col, "~ A0.3 + A0.4 + A0.56 + A0.57 + A0.58 + A0.59 + Age + Experience + A0.68 + A0.69"), data = pre_post.attitude_E)
summary(lmodel)
